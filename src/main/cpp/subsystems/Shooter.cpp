// RobotBuilder Version: 3.1
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#include "subsystems/Shooter.h"
#include <frc/smartdashboard/SmartDashboard.h>

Shooter::Shooter(){
    SetName("Shooter");
    SetSubsystem("Shooter");

    AddChild("PulleyMotor", &m_pulleyMotor);
    //TODO: must define and determine how to use CAN bus in this architecture
    //AddChild("ShooterLeftMotor", &m_shooterLeft);
    //AddChild("ShooterRightMotor", &m_shooterRight);

    m_pulleyMotor.SetInverted(false);
    //m_shooterLeft.SetInverted(false);
    //m_shooterRight.SetInverted(false);
}

void Shooter::Periodic() {
    // Put code here to be run every loop
}

void Shooter::SimulationPeriodic() {
    // This method will be called once per scheduler run when in simulation
}

// Put methods for controlling this subsystem
// here. Call these from Commands.

void Shooter::Expel() {
    wpi::outs() << "Shoot Out.\n";
    m_shooterLeft.Set(0.75);
    m_shooterRight.Set(0.75);
}

void Shooter::Intake() {
    wpi::outs() << "Intake.\n";
    m_shooterLeft.Set(-0.75);
    m_shooterRight.Set(-0.75);
}

void Shooter::PullIn() {
    wpi::outs() << "Pulley In.\n";
    m_pulleyMotor.Set(-0.75);
}

void Shooter::PullOut() {
    wpi::outs() << "Pulley Out.\n";
    m_pulleyMotor.Set(0.75);
}